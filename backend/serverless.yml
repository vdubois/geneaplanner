service: geneaplanner-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-3
  timeout: 10
  tracing:
    apiGateway: true
    lambda: true
  environment:
    BUCKET_FICHIERS_GEDCOM: geneaplanner-${opt:stage, self:provider.stage}-fichiers-gedcom
    TABLE_DONNEES: geneaplanner-${opt:stage, self:provider.stage}-donnees
    thundra_apiKey: b82e96d9-0c95-4b6c-b6d0-41e8d623d888
  httpApi:
    cors:
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - PUT
        - POST
        - DELETE
        - PATCH
        - OPTIONS
      allowedOrigins:
        - http://localhost:5173
        - https://geneaplanner-dev.surge.sh
        - https://geneaplanner.surge.sh
    payload: '2.0'
    authorizers:
      accessTokenAuth0:
        identitySource: $request.header.Authorization
        issuerUrl: https://geneaplanner.eu.auth0.com/
        audience:
          - https://geneaplanner-api-gateway/
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::Join:
                - ""
                - - "arn:aws:dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":table/geneaplanner*"
        - Effect: Allow
          Action:
            - dynamodb:ListTables
          Resource:
            - Fn::Join:
                - ""
                - - "arn:aws:dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":table/*"
        - Effect: "Allow"
          Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
          Resource: "*"
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::*/*"

plugins:
  - serverless-plugin-thundra
  - serverless-plugin-umzug
  - serverless-plugin-typescript

custom:
  umzug:
    tablename: geneaplanner-${env:STAGE, opt:stage, self:provider.stage}-migrations

package:
  patterns:
    - "!node_modules/**"
    - "node_modules/aws-lambda-utils/**"
    - "node_modules/aws-sdk-fluent-builder/**"
    - "node_modules/read-gedcom/**"
    - "node_modules/uuid/**"
    - "node_modules/typescript-inject/**"
    - "node_modules/@thundra/core/**"

functions:
  connexion-fichiers:
    handler: src/fichiers/fichiers.connecter
    events:
      - httpApi:
          path: /fichiers/{identifiant}
          method: post
          authorizer:
            name: accessTokenAuth0
  recuperation-fichiers:
    handler: src/fichiers/fichiers.recupererFichiers
    events:
      - httpApi:
          path: /arbres/{identifiant}/fichiers/{identifiantIndividu}
          method: get
          authorizer:
            name: accessTokenAuth0
  parametrage-fichiers:
    handler: src/fichiers/fichiers.parametres
    events:
      - httpApi:
          path: /fichiers/{identifiant}
          method: get
          authorizer:
            name: accessTokenAuth0
  enregistrement-fichiers:
    handler: src/fichiers/fichiers.enregistrerProjet
    events:
      - httpApi:
          path: /fichiers/{identifiant}
          method: patch
          authorizer:
            name: accessTokenAuth0
  enregistrement-api-key:
    handler: src/googlemaps/googlemaps.enregistrerApiKey
    events:
      - httpApi:
          path: /googlemaps/{identifiant}
          method: post
          authorizer:
            name: accessTokenAuth0
  recuperation-api-key:
    handler: src/comptes/infrastructure/primaire/lambdas/recupererApiKeyGoogleMaps.handler
    events:
      - httpApi:
          path: /googlemaps/{identifiant}
          method: get
          authorizer:
            name: accessTokenAuth0
  enregistrement-fichiers-arbre:
    handler: src/fichiers/fichiers.enregistrerFichiers
    events:
      - httpApi:
          path: /arbres/{identifiant}/fichiers
          method: post
          authorizer:
            name: accessTokenAuth0
  definir-racine-gedcom:
    handler: src/utilisateurs/arbre.definirRacineDeLArbre
    events:
      - httpApi:
          path: /arbres/{identifiant}
          method: patch
          authorizer:
            name: accessTokenAuth0
  chargement-gedcom:
    handler: src/utilisateurs/arbre.charger
    events:
      - httpApi:
          path: /arbres/{identifiant}
          method: put
          authorizer:
            name: accessTokenAuth0
  recherche-gedcom:
    handler: src/utilisateurs/arbre.rechercher
    events:
      - httpApi:
          path: /arbres/{identifiant}
          method: get
          authorizer:
            name: accessTokenAuth0
  suppression-gedcom:
    handler: src/comptes/infrastructure/primaire/lambdas/suppressionDUnArbre.handler
    events:
      - httpApi:
          path: /arbres/{identifiant}
          method: delete
          authorizer:
            name: accessTokenAuth0
  detail-gedcom:
    handler: src/utilisateurs/arbre.detail
    events:
      - httpApi:
          path: /arbres/{identifiant}/detail/{individu}
          method: get
          authorizer:
            name: accessTokenAuth0
  details-individu:
    handler: src/utilisateurs/arbre.rechercherParIdentifiant
    events:
      - httpApi:
          path: /arbres/{identifiant}/individus/{individu}
          method: get
          authorizer:
            name: accessTokenAuth0
  recuperation-corrections:
    handler: src/corrections/corrections.recupererLesCorrections
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/corrections
          method: get
          authorizer:
            name: accessTokenAuth0
  ajout-correction:
    handler: src/corrections/corrections.ajouterUneCorrection
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/corrections
          method: post
          authorizer:
            name: accessTokenAuth0
  validation-correction:
    handler: src/corrections/corrections.validerUneCorrection
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/corrections/{identifiantCorrection}
          method: delete
          authorizer:
            name: accessTokenAuth0
  recuperation-recherches:
    handler: src/recherches/recherches.recupererLesRecherches
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches
          method: get
          authorizer:
            name: accessTokenAuth0
  ajout-recherches-individu:
    handler: src/recherches/recherches.ajouterDesRecherchesDIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches
          method: post
          authorizer:
            name: accessTokenAuth0
  suppression-recherches-individu:
    handler: src/recherches/recherches.supprimerDesRecherchesDIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches/{individu}
          method: delete
          authorizer:
            name: accessTokenAuth0
  ajout-note-a-recherches-individu:
    handler: src/recherches/recherches.ajouterUneNoteAUnIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches/{individu}/notes
          method: post
          authorizer:
            name: accessTokenAuth0
  suppression-note-a-recherches-individu:
    handler: src/recherches/recherches.supprimerUneNoteDUnIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches/{individu}/notes/{note}
          method: delete
          authorizer:
            name: accessTokenAuth0
  ajout-recherche-a-recherches-individu:
    handler: src/recherches/recherches.ajouterUneRechercheAUnIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches/{individu}/recherches
          method: post
          authorizer:
            name: accessTokenAuth0
  suppr-recherche-recherches-individu:
    handler: src/recherches/recherches.supprimerUneRechercheDUnIndividu
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/recherches/{individu}/recherches/{recherche}
          method: delete
          authorizer:
            name: accessTokenAuth0
  recuperation-archives:
    handler: src/archives/archives.recupererLesArchives
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives
          method: get
          authorizer:
            name: accessTokenAuth0
  ajout-archive:
    handler: src/archives/archives.ajouterUneArchive
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives
          method: post
          authorizer:
            name: accessTokenAuth0
  modification-archive:
    handler: src/archives/archives.modifierLeLibelleDUneArchive
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives/{identifiantArchive}
          method: put
          authorizer:
            name: accessTokenAuth0
  suppression-archive:
    handler: src/archives/archives.supprimerUneArchive
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives/{identifiantArchive}
          method: delete
          authorizer:
            name: accessTokenAuth0
  recuperation-archive:
    handler: src/archives/archives.recupererUneArchive
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives/{identifiantArchive}
          method: get
          authorizer:
            name: accessTokenAuth0
  ajout-registre:
    handler: src/archives/archives.ajouterRegistreAuxArchives
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/archives/{identifiantArchive}/registres
          method: post
          authorizer:
            name: accessTokenAuth0
  recuperation-archives-admin:
    handler: src/comptes/infrastructure/primaire/lambdas/recupererLesModelesDArchives.handler
    events:
      - httpApi:
          path: /utilisateurs/{identifiant}/modeles-archives
          method: get
          authorizer:
            name: accessTokenAuth0
  ajout-archive-admin:
    handler: src/archives/admin.ajouterUneArchive
    events:
      - httpApi:
          path: /admin/archives
          method: post
          authorizer:
            name: accessTokenAuth0
  modification-archive-admin:
    handler: src/archives/admin.modifierUneArchive
    events:
      - httpApi:
          path: /admin/archives/{identifiantArchive}
          method: put
          authorizer:
            name: accessTokenAuth0
  suppression-archive-admin:
    handler: src/archives/admin.supprimerUneArchive
    events:
      - httpApi:
          path: /admin/archives/{identifiantArchive}
          method: delete
          authorizer:
            name: accessTokenAuth0
