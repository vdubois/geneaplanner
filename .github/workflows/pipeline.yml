name: Généaplanner pipeline

on:
  push:
    branches:
      - 'master'

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup Node JS
        uses: actions/setup-node@v3
        with:
          node-version: 16.18.x
      -
        name: Build backend
        run: |
          npm install
          npm test
        working-directory: backend
      -
        name: Prepare frontend
        run: npm install --force
        working-directory: frontend
      -
        name: Deploy backend on dev
        run: npm run deploy-dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: backend
      -
        name: Deploy frontend on dev
        run: npm run deploy-dev
        env:
          OAUTH0_DEV_CLIENT_ID: ${{ secrets.OAUTH0_DEV_CLIENT_ID }}
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        working-directory: frontend
      -
        name: Prepare end-to-end-tests
        run: |
          npm install
          wget https://github.com/cucumber/json-formatter/releases/download/v19.0.0/cucumber-json-formatter-linux-amd64
          mv cucumber-json-formatter-linux-amd64 cucumber-json-formatter
          chmod +x cucumber-json-formatter
        working-directory: e2e
      -
        name: Run end-to-end tests
        uses: cypress-io/github-action@v5
        env:
          CYPRESS_BASE_URL: https://geneaplanner-dev.surge.sh
          CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
          AUTH0_API_CLIENT_ID: ${{ secrets.AUTH0_API_CLIENT_ID }}
          AUTH0_API_CLIENT_SECRET: ${{ secrets.AUTH0_API_CLIENT_SECRET }}
        with:
          browser: chrome
          working-directory: e2e
      -
        name: Deploy backend on prod
        run: npm run deploy-prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: backend
